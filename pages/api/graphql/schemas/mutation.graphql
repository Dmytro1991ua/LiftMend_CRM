type ScheduledEventAndRepairJobResponse {
  repairJob: RepairJob!
  calendarEvent: CalendarEvent!
}

type DeleteCalendarAndRepairJobResponse {
  deletedEventId: ID
  deletedRepairJobId: ID
}

type AuthResponse {
  id: ID!
}

type Mutation {
  createRepairJobAndEvent(
    repairJobInput: CreateRepairJobInput!
    calendarEventInput: CreateCalendarEventInput!
  ): ScheduledEventAndRepairJobResponse!
  deleteRepairJobAndEvent(calendarEventId: ID!, repairJobId: ID!): DeleteCalendarAndRepairJobResponse!
  updateRepairJob(input: UpdateRepairJobInput!): RepairJob!
  updateElevatorRecord(input: UpdateElevatorRecordInput!): ElevatorRecord!
  deleteElevatorRecord(id: ID!): DeleteElevatorRecordResponse!
  createTechnicianRecord(input: CreateTechnicianRecordInput!): TechnicianRecord!
  updateTechnicianRecord(input: UpdateTechnicianRecordInput!): TechnicianRecord!
  deleteTechnicianRecord(id: ID!): DeleteTechnicianRecordResponse!
  reassignTechnician(input: UpdateRepairJobInput!): RepairJob!
  signUp(input: CreateUserInput!): AuthResponse!
  signIn(input: SignInUserInput!): AuthResponse!
  signOut: Boolean!
  forgotPassword(email: String!, redirectTo: String!): Boolean!
}
