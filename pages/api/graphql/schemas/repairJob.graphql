enum RepairJobSortField {
  JOB_TYPE
  JOB_PRIORITY
  STATUS
  START_DATE
  END_DATE
  ELEVATOR_TYPE
  BUILDING_NAME
  ELEVATOR_LOCATION
  TECHNICIAN_NAME
}

type RepairJobScheduleData {
  repairJobTypes: [String!]!
  elevatorTypes: [String!]!
  buildingNames: [String!]!
  elevatorLocations: [String!]!
  technicianNames: [String!]!
  technicianSkills: [String!]!
  priorities: [String!]!
  statuses: [String!]
}

type RepairJob implements Node {
  id: ID!
  jobType: String!
  jobDetails: String!
  jobPriority: String!
  elevatorType: String!
  buildingName: String!
  elevatorLocation: String!
  technicianName: String!
  startDate: DateTime!
  endDate: DateTime!
  calendarEventId: String
  status: String!
  actualEndDate: DateTime
  isOverdue: Boolean
}

type RepairJobEdge implements Edge {
  cursor: String!
  node: RepairJob!
}

type RepairJobConnection implements Connection {
  edges: [RepairJobEdge!]!
  pageInfo: PageInfo!
  total: Int!
}

input CreateRepairJobInput {
  jobType: String!
  jobDetails: String!
  jobPriority: String!
  elevatorType: String!
  buildingName: String!
  elevatorLocation: String!
  technicianName: String!
  startDate: DateTime!
  endDate: DateTime!
}

input UpdateRepairJobInput {
  id: ID!
  jobType: String
  jobDetails: String
  jobPriority: String
  startDate: DateTime
  endDate: DateTime
  elevatorType: String
  buildingName: String
  elevatorLocation: String
  technicianName: String
  status: String
}

input RepairJobSortInput {
  field: RepairJobSortField
  order: OrderOption
}

input RepairJobFilterOptions {
  searchTerm: String
  jobType: [String!]
  jobPriority: [String!]
  elevatorType: [String!]
  buildingName: [String!]
  elevatorLocation: [String!]
  technicianName: [String!]
  status: [String!]
}
